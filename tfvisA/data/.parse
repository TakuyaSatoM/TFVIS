2#public
120#class
123#QuickSort
156#{
22#public
23#static
91#void
163#main
294#(
133#String
88#[
89#]
213#args
295#)
746#{
95#int
78#[
79#]
213#list
211#=
276#{
650#2
278#,
650#9
278#,
650#5
278#,
650#4
278#,
650#8
278#,
650#1
278#,
650#3
277#}
741#;
333#quickSort
674#(
333#list
675#)
711#;
333#print
674#(
333#list
675#)
711#;
747#}
162#end_method
22#public
23#static
91#void
163#quickSort
294#(
95#int
78#[
79#]
213#list
295#)
746#{
333#recursiveQuickSort
674#(
333#list
678#,
650#0
678#,
333#list
336#.
343#length
461#-
650#1
675#)
711#;
747#}
162#end_method
22#public
23#static
91#void
163#recursiveQuickSort
294#(
95#int
78#[
79#]
213#list
298#,
95#int
213#first
298#,
95#int
213#last
295#)
746#{
790#if
794#(
333#first
380#<
333#last
795#)
746#{
95#int
213#pivotIndex
211#=
333#partition
674#(
333#list
678#,
333#first
678#,
333#last
675#)
741#;
333#recursiveQuickSort
674#(
333#list
678#,
333#first
678#,
333#pivotIndex
461#-
650#1
675#)
711#;
333#recursiveQuickSort
674#(
333#list
678#,
333#pivotIndex
460#+
650#1
678#,
333#last
675#)
711#;
747#}
792#end_if
798#end_branch
747#}
162#end_method
22#public
23#static
95#int
163#partition
294#(
95#int
78#[
79#]
213#list
298#,
95#int
213#first
298#,
95#int
213#last
295#)
746#{
95#int
213#pivot
211#=
333#list
628#[
333#first
629#]
741#;
95#int
213#front
211#=
333#first
460#+
650#1
741#;
95#int
213#back
211#=
333#last
741#;
800#while
804#(
333#front
380#<
333#back
805#)
746#{
800#while
804#(
333#front
381#<=
333#back
396#&&
333#list
628#[
333#front
629#]
381#<=
333#pivot
805#)
746#{
333#front
490#++
711#;
747#}
802#While_end
800#while
804#(
333#front
381#<=
333#back
396#&&
333#pivot
380#<
333#list
628#[
333#back
629#]
805#)
746#{
333#back
492#--
711#;
747#}
802#While_end
790#if
794#(
333#front
380#<
333#back
795#)
746#{
95#int
213#tmp
211#=
333#list
628#[
333#front
629#]
741#;
333#list
628#[
333#front
629#]
351#=
333#list
628#[
333#back
629#]
711#;
333#list
628#[
333#back
629#]
351#=
333#tmp
711#;
747#}
792#end_if
798#end_branch
747#}
802#While_end
800#while
804#(
333#front
387#>
333#back
805#)
746#{
790#if
794#(
333#list
336#.
343#length
381#<=
333#front
795#)
746#{
333#front
492#--
711#;
747#}
792#end_if
791#else
790#if
794#(
333#list
628#[
333#front
629#]
388#>=
333#pivot
795#)
746#{
333#front
492#--
711#;
747#}
792#end_if
798#end_branch
793#end_else
798#end_branch
747#}
802#While_end
790#if
794#(
333#list
628#[
333#front
629#]
381#<=
333#pivot
795#)
746#{
333#list
628#[
333#first
629#]
351#=
333#list
628#[
333#front
629#]
711#;
333#list
628#[
333#front
629#]
351#=
333#pivot
711#;
747#}
792#end_if
798#end_branch
870#return
333#front
871#;
747#}
162#end_method
22#public
23#static
91#void
163#print
294#(
95#int
78#[
79#]
213#list
295#)
746#{
820#for
824#(
95#int
213#j
211#=
650#0
831#;
333#j
380#<
333#list
336#.
343#length
841#;
333#j
490#++
825#)
746#{
333#System
336#.
343#out
336#.
343#print
674#(
333#list
628#[
333#j
629#]
460#+
653#" "
675#)
711#;
747#}
822#end_for
333#System
336#.
343#out
336#.
343#println
674#(
675#)
711#;
747#}
162#end_method
157#}
122#end_class
